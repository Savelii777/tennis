import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { Logger } from '@nestjs/common';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const logger = new Logger('Main');
  
  app.useGlobalPipes(new ValidationPipe({
    whitelist: true,
    transform: true,
  }));

  app.enableCors({
    origin: true, 
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    preflightContinue: false,
    optionsSuccessStatus: 204,
    credentials: true,
    allowedHeaders: 'Origin,X-Requested-With,Content-Type,Accept,Authorization,Access-Control-Allow-Origin'
  });

  const config = new DocumentBuilder()
    .setTitle('üéæ Tennis Community API')
    .setDescription(`
      <div style="font-family: 'Segoe UI', sans-serif; line-height: 1.6;">
        <h2>üéæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Tennis Community API!</h2>
        
        <h3>üöÄ –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ–Ω–Ω–∏—Å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h3>
        <p>–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ç–µ–Ω–Ω–∏—Å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ —Å –±–æ–≥–∞—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏.</p>
        
        <h4>üì± –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏:</h4>
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 15px; margin: 20px 0;">
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #007bff;">
            <strong>üîê Auth (–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)</strong><br>
            ‚Ä¢ –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram<br>
            ‚Ä¢ JWT —Ç–æ–∫–µ–Ω—ã<br>
            ‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è<br>
            ‚Ä¢ –†–æ–ª–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #28a745;">
            <strong>üë• Users (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)</strong><br>
            ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª–∏ –∏–≥—Ä–æ–∫–æ–≤<br>
            ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞<br>
            ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –º—è—á–µ–π (–≤–∞–ª—é—Ç–∞)<br>
            ‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #ffc107;">
            <strong>üéæ Requests (–ó–∞—è–≤–∫–∏)</strong><br>
            ‚Ä¢ –ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤<br>
            ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫<br>
            ‚Ä¢ –û—Ç–∫–ª–∏–∫–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è<br>
            ‚Ä¢ –§–∏–ª—å—Ç—Ä—ã –ø–æ —É—Ä–æ–≤–Ω—é
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #dc3545;">
            <strong>‚ö° Matches (–ú–∞—Ç—á–∏)</strong><br>
            ‚Ä¢ –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤<br>
            ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∏–≥—Ä<br>
            ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–±–µ–¥/–ø–æ—Ä–∞–∂–µ–Ω–∏–π<br>
            ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ç—á–∏
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #6f42c1;">
            <strong>üèÜ Tournaments (–¢—É—Ä–Ω–∏—Ä—ã)</strong><br>
            ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–æ–≤<br>
            ‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤<br>
            ‚Ä¢ –°–µ—Ç–∫–∏ –Ω–∞ –≤—ã–±—ã–≤–∞–Ω–∏–µ<br>
            ‚Ä¢ –ü—Ä–∏–∑–æ–≤—ã–µ —Ñ–æ–Ω–¥—ã
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #17a2b8;">
            <strong>üèÉ‚Äç‚ôÇÔ∏è Trainings (–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏)</strong><br>
            ‚Ä¢ –ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è<br>
            ‚Ä¢ –ó–∞–ø–∏—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä–∞–º<br>
            ‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫<br>
            ‚Ä¢ –û–ø–ª–∞—Ç–∞ –∑–∞–Ω—è—Ç–∏–π
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #fd7e14;">
            <strong>üì± Stories (–ò—Å—Ç–æ—Ä–∏–∏)</strong><br>
            ‚Ä¢ –§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å –º–∞—Ç—á–µ–π<br>
            ‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏<br>
            ‚Ä¢ –õ–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏<br>
            ‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #20c997;">
            <strong>üéÅ Cases (–ö–µ–π—Å—ã)</strong><br>
            ‚Ä¢ –ò–≥—Ä–æ–≤—ã–µ –∫–µ–π—Å—ã —Å –ø—Ä–∏–∑–∞–º–∏<br>
            ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≥—Ä–∞–¥<br>
            ‚Ä¢ –†–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã<br>
            ‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #e83e8c;">
            <strong>üîó Referrals (–†–µ—Ñ–µ—Ä–∞–ª—ã)</strong><br>
            ‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π<br>
            ‚Ä¢ –ë–æ–Ω—É—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã<br>
            ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π<br>
            ‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #6c757d;">
            <strong>üìç Locations (–õ–æ–∫–∞—Ü–∏–∏)</strong><br>
            ‚Ä¢ –¢–µ–Ω–Ω–∏—Å–Ω—ã–µ –∫–æ—Ä—Ç—ã<br>
            ‚Ä¢ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è<br>
            ‚Ä¢ –ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–∏—Ö –∫–æ—Ä—Ç–æ–≤<br>
            ‚Ä¢ –û—Ç–∑—ã–≤—ã –æ –º–µ—Å—Ç–∞—Ö
          </div>
          <div style="padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #343a40;">
            <strong>ü§ñ Telegram Bot</strong><br>
            ‚Ä¢ –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç<br>
            ‚Ä¢ –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ Telegram<br>
            ‚Ä¢ Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è<br>
            ‚Ä¢ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
          </div>
        </div>
        
        <h4>üîê –ö–∞–∫ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É:</h4>
        <ol style="background: #e3f2fd; padding: 20px; border-radius: 8px;">
          <li><strong>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>POST /auth/login-telegram</code></li>
          <li><strong>–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω:</strong> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ <code>access_token</code> –∏–∑ –æ—Ç–≤–µ—Ç–∞</li>
          <li><strong>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å:</strong> –ù–∞–∂–º–∏—Ç–µ <strong>Authorize</strong> –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω</li>
          <li><strong>–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ API:</strong> –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã!</li>
        </ol>
        
        <h4>üõ†Ô∏è –ü–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:</h4>
        <ul style="background: #f8f9fa; padding: 20px; border-radius: 8px;">
          <li><a href="/api/auth-helper" target="_blank">üîß –ü–æ–º–æ—â–Ω–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –±—ã—Å—Ç—Ä—ã–º –≤—Ö–æ–¥–æ–º</a></li>
          <li><a href="/api-json" target="_blank">üìã OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è (JSON)</a></li>
          <li><a href="https://t.me/your_tennis_bot" target="_blank">ü§ñ Telegram –±–æ—Ç</a></li>
        </ul>
        
        <div style="background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <strong>üí° –°–æ–≤–µ—Ç:</strong> –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–º–æ—â–Ω–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç —Ç–æ–∫–µ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∞–¥–º–∏–Ω, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä).
        </div>
      </div>
    `)
    .setVersion('2.1')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'Authorization',
        description: 'üîë –í–≤–µ–¥–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º Bearer',
        in: 'header'
      },
      'access-token'
    )
    .addTag('auth', 'üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è')
    .addTag('users', 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–∏')  
    .addTag('requests', 'üéæ –ó–∞—è–≤–∫–∏ –Ω–∞ –∏–≥—Ä—É')
    .addTag('matches', '‚ö° –ú–∞—Ç—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã')
    .addTag('tournaments', 'üèÜ –¢—É—Ä–Ω–∏—Ä—ã –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è')
    .addTag('trainings', 'üèÉ‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –∑–∞–Ω—è—Ç–∏—è')
    .addTag('stories', 'üì± Stories –∏ –º–µ–¥–∏–∞')
    .addTag('cases', 'üéÅ –ö–µ–π—Å—ã –∏ –ø—Ä–∏–∑—ã')
    .addTag('admin-cases', '‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ–π—Å–æ–≤')
    .addTag('referrals', 'üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞')
    .addTag('locations', 'üìç –õ–æ–∫–∞—Ü–∏–∏ –∏ –∫–æ—Ä—Ç—ã')
    .addTag('media', 'üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤')
    .addTag('telegram', 'ü§ñ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è')
    .setContact('Tennis Community Support', 'https://t.me/support', 'support@tennis.app')
    .setLicense('MIT License', 'https://opensource.org/licenses/MIT')
    .setExternalDoc('üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞', 'https://github.com/your-repo/tennis-app')
    .build();
    
  const document = SwaggerModule.createDocument(app, config);
  
  logger.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swagger UI...`);
  logger.log(`JWT_SECRET —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${!!process.env.JWT_SECRET}`);

  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      docExpansion: 'list',
      defaultModelsExpandDepth: 0,
      filter: true,
      displayRequestDuration: true,
      tryItOutEnabled: true,
      requestInterceptor: (req: any) => {
        const authKey = Object.keys(window.localStorage).find(key => key.startsWith('authorized') && key.includes('access-token'));
        
        if (authKey) {
          try {
            const authData = JSON.parse(window.localStorage.getItem(authKey) || '{}');
            if (authData.value) {
              const token = authData.value.startsWith('Bearer ') 
                ? authData.value 
                : `Bearer ${authData.value}`;
              
              req.headers['Authorization'] = token;
              console.log('–î–æ–±–∞–≤–ª–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization:', token.substring(0, 20) + '...');
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞', e);
          }
        }
        return req;
      },
      responseInterceptor: (res: any) => {
        console.log('Response status:', res.status);
        return res;
      }
    },
    customSiteTitle: 'Tennis API - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
    customCss: `
      .swagger-ui .topbar { display: none }
      .swagger-ui .information-container { padding: 20px; background-color: #f8f9fa; border-radius: 5px; }
      .swagger-ui .auth-wrapper { display: flex; justify-content: center; margin: 10px 0 15px; }
      .swagger-ui .authorization__btn { font-size: 16px; padding: 10px 20px; }
      .swagger-ui .auth-container input { font-size: 14px; padding: 8px; width: 100%; }
      .swagger-ui .auth-container h4 { font-weight: bold; margin-bottom: 10px; }
    `
  });

  app.use('/api/auth-helper', (req: any, res: any) => {
    const baseUrl = req.protocol + '://' + req.get('host');
    res.send(`
      <html>
        <head>
          <title>–ü–æ–º–æ—â–Ω–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API</title>
          <style>
            body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
            .card { border: 1px solid #ddd; border-radius: 8px; padding: 20px; margin-bottom: 20px; }
            .steps { background-color: #f8f9fa; }
            input { width: 100%; padding: 8px; margin-bottom: 10px; }
            button { background: #4990e2; color: white; border: none; padding: 10px 15px; border-radius: 4px; cursor: pointer; }
            h3 { color: #333; }
            code { background: #f0f0f0; padding: 2px 5px; border-radius: 3px; }
            .success { color: green; }
            .error { color: red; }
          </style>
        </head>
        <body>
          <h2>–ü–æ–º–æ—â–Ω–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è Tennis API —á–µ—Ä–µ–∑ ${req.get('host')}</h2>
          
          <div class="card steps">
            <h3>–®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç /auth/login/telegram</h3>
            <p>–í—ã–ø–æ–ª–Ω–∏—Ç–µ POST –∑–∞–ø—Ä–æ—Å —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:</p>
            <pre>{
  "id": "123456789",
  "hash": "valid_hash",
  "username": "admin",
  "first_name": "Admin",
  "last_name": "",
  "photo_url": "",
  "auth_date": "1654837742"
}</pre>
          </div>
          
          <div class="card">
            <h3>–®–∞–≥ 2: –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω</h3>
            <input id="token-input" type="text" placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –∏–∑ –æ—Ç–≤–µ—Ç–∞ (access_token)">
            <button id="save-token">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ</button>
            <p id="status"></p>
          </div>
          
          <div class="card">
            <h3>–®–∞–≥ 3: –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ Swagger UI</h3>
            <p>–¢–æ–∫–µ–Ω –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.</p>
            <a href="${baseUrl}/api"><button>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ Swagger UI</button></a>
          </div>
          
          <script>
            document.getElementById('save-token').addEventListener('click', function() {
              const token = document.getElementById('token-input').value.trim();
              if (!token) {
                document.getElementById('status').textContent = '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω!';
                document.getElementById('status').className = 'error';
                return;
              }
              
              try {
                const authKey = 'authorized-access-token';
                const authValue = token.startsWith('Bearer ') ? token : 'Bearer ' + token;
                localStorage.setItem(authKey, JSON.stringify({
                  name: 'access-token',
                  schema: { type: 'http', scheme: 'bearer' },
                  value: authValue
                }));
                
                document.getElementById('status').textContent = '–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API.';
                document.getElementById('status').className = 'success';
              } catch (e) {
                document.getElementById('status').textContent = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: ' + e.message;
                document.getElementById('status').className = 'error';
              }
            });
          </script>
        </body>
      </html>
    `);
  });

  const PORT = process.env.PORT || 3000;
  await app.listen(PORT, '0.0.0.0'); 
  console.log(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api`);
  console.log(`–ü–æ–º–æ—â–Ω–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api/auth-helper`);
}
bootstrap();