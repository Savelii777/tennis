import { PrismaClient, CaseItemType } from '@prisma/client';

const prisma = new PrismaClient();

export async function seedCases() {
  console.log('üéÅ Seeding cases...');

  // –°–æ–∑–¥–∞–µ–º –∫–µ–π—Å—ã
  const basicCase = await prisma.case.upsert({
    where: { id: 1 },
    update: {},
    create: {
      name: '–û–±—ã—á–Ω—ã–π –∫–µ–π—Å',
      description: '–ö–µ–π—Å —Å –±–∞–∑–æ–≤—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤',
      priceBalls: 100,
      image: 'https://example.com/cases/basic-case.jpg',
      isActive: true,
    },
  });

  const premiumCase = await prisma.case.upsert({
    where: { id: 2 },
    update: {},
    create: {
      name: '–ü—Ä–µ–º–∏—É–º –∫–µ–π—Å',
      description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–µ–π—Å —Å —Ä–µ–¥–∫–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏',
      priceBalls: 250,
      image: 'https://example.com/cases/premium-case.jpg',
      isActive: true,
    },
  });

  const holidayCase = await prisma.case.upsert({
    where: { id: 3 },
    update: {},
    create: {
      name: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –∫–µ–π—Å',
      description: '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –∫–µ–π—Å —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏',
      priceBalls: 200,
      image: 'https://example.com/cases/holiday-case.jpg',
      isActive: false, // –ù–µ–∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    },
  });

  console.log('üéÅ Creating case items...');

  // –ü—Ä–∏–∑—ã –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –∫–µ–π—Å–∞
  const basicCaseItems = [
    {
      name: '+50 —Ç–µ–Ω–Ω–∏—Å–Ω—ã—Ö –º—è—á–µ–π',
      type: CaseItemType.VIRTUAL,
      payload: { balls: 50 },
      dropChance: 0.30,
      imageUrl: 'https://example.com/items/balls-50.jpg',
    },
    {
      name: '+25 —Ç–µ–Ω–Ω–∏—Å–Ω—ã—Ö –º—è—á–µ–π',
      type: CaseItemType.VIRTUAL,
      payload: { balls: 25 },
      dropChance: 0.35,
      imageUrl: 'https://example.com/items/balls-25.jpg',
    },
    {
      name: '–ë–µ–π–¥–∂ "–ù–æ–≤–∏—á–æ–∫" –Ω–∞ 7 –¥–Ω–µ–π',
      type: CaseItemType.VIRTUAL,
      payload: { badge_id: 'novice', duration_days: 7 },
      dropChance: 0.15,
      imageUrl: 'https://example.com/items/badge-novice.jpg',
    },
    {
      name: '–ú–µ–º-–∫–∞—Ä—Ç–∏–Ω–∫–∞ —É—Ç–µ—à–µ–Ω–∏—è',
      type: CaseItemType.ACTION,
      payload: { meme: true, meme_id: 'consolation' },
      dropChance: 0.20,
      imageUrl: 'https://example.com/items/meme-consolation.jpg',
    },
  ];

  for (const item of basicCaseItems) {
    await prisma.caseItem.create({
      data: {
        caseId: basicCase.id,
        ...item,
      },
    });
  }

  // –ü—Ä–∏–∑—ã –¥–ª—è –ø—Ä–µ–º–∏—É–º –∫–µ–π—Å–∞
  const premiumCaseItems = [
    {
      name: '+100 —Ç–µ–Ω–Ω–∏—Å–Ω—ã—Ö –º—è—á–µ–π',
      type: CaseItemType.VIRTUAL,
      payload: { balls: 100 },
      dropChance: 0.25,
      imageUrl: 'https://example.com/items/balls-100.jpg',
    },
    {
      name: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤—Ö–æ–¥ –≤ —Ç—É—Ä–Ω–∏—Ä',
      type: CaseItemType.ACTION,
      payload: { tournament_access: true, tournaments_count: 1 },
      dropChance: 0.10,
      imageUrl: 'https://example.com/items/tournament-access.jpg',
    },
    {
      name: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–µ–π–¥–∂ "–ß–µ–º–ø–∏–æ–Ω"',
      type: CaseItemType.VIRTUAL,
      payload: { badge_id: 'champion', permanent: true },
      dropChance: 0.05,
      imageUrl: 'https://example.com/items/badge-champion.jpg',
    },
    {
      name: '–§—É—Ç–±–æ–ª–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º (—Ä–∞–∑–º–µ—Ä M)',
      type: CaseItemType.PHYSICAL,
      payload: { sku: 'tshirt_m', size: 'M', color: 'white' },
      dropChance: 0.08,
      imageUrl: 'https://example.com/items/tshirt.jpg',
    },
    {
      name: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Ozon 1000‚ÇΩ',
      type: CaseItemType.PHYSICAL,
      payload: { platform: 'ozon', amount: 1000, currency: 'RUB' },
      dropChance: 0.02,
      imageUrl: 'https://example.com/items/ozon-certificate.jpg',
    },
    {
      name: '+75 —Ç–µ–Ω–Ω–∏—Å–Ω—ã—Ö –º—è—á–µ–π',
      type: CaseItemType.VIRTUAL,
      payload: { balls: 75 },
      dropChance: 0.30,
      imageUrl: 'https://example.com/items/balls-75.jpg',
    },
    {
      name: '–°–∫–∏–¥–∫–∞ 50% –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–µ–π—Å',
      type: CaseItemType.ACTION,
      payload: { discount: 0.5, valid_days: 30 },
      dropChance: 0.20,
      imageUrl: 'https://example.com/items/discount.jpg',
    },
  ];

  for (const item of premiumCaseItems) {
    await prisma.caseItem.create({
      data: {
        caseId: premiumCase.id,
        ...item,
      },
    });
  }

  // –ü—Ä–∏–∑—ã –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –∫–µ–π—Å–∞
  const holidayCaseItems = [
    {
      name: '+200 —Ç–µ–Ω–Ω–∏—Å–Ω—ã—Ö –º—è—á–µ–π (–ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –±–æ–Ω—É—Å)',
      type: CaseItemType.VIRTUAL,
      payload: { balls: 200, holiday_bonus: true },
      dropChance: 0.15,
      imageUrl: 'https://example.com/items/balls-holiday.jpg',
    },
    {
      name: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –±–µ–π–¥–∂ "–ù–æ–≤—ã–π –≥–æ–¥"',
      type: CaseItemType.VIRTUAL,
      payload: { badge_id: 'new_year', special: true },
      dropChance: 0.20,
      imageUrl: 'https://example.com/items/badge-newyear.jpg',
    },
    {
      name: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∫—Ä—É–∂–∫–∞',
      type: CaseItemType.PHYSICAL,
      payload: { sku: 'mug_holiday', design: 'tennis_2025' },
      dropChance: 0.10,
      imageUrl: 'https://example.com/items/holiday-mug.jpg',
    },
    {
      name: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –º–µ–º',
      type: CaseItemType.ACTION,
      payload: { meme: true, meme_id: 'holiday_cheer' },
      dropChance: 0.55,
      imageUrl: 'https://example.com/items/holiday-meme.jpg',
    },
  ];

  for (const item of holidayCaseItems) {
    await prisma.caseItem.create({
      data: {
        caseId: holidayCase.id,
        ...item,
      },
    });
  }

  console.log('‚úÖ Cases seeded successfully!');
}