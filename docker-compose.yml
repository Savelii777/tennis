services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: tennis_app
      POSTGRES_USER: tennis_user
      POSTGRES_PASSWORD: tennis_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tennis_user -d tennis_app"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tennis-network

  # Основное приложение
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # База данных
      DATABASE_URL: postgresql://tennis_user:tennis_password@postgres:5432/tennis_app
      
      # JWT
      JWT_SECRET: tennis_super_secret_key_2024_production
      JWT_EXPIRES_IN: 24h
      
      # Приложение
      NODE_ENV: production
      PORT: 3000
      
      # Telegram Bot (замените на ваш токен)
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-your_telegram_bot_token_here}
      
      # URLs
      API_BASE_URL: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
      
      # Файлы
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 5242880
      
      # Логирование
      LOG_LEVEL: info
      
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - tennis-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tennis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tennis-network:
    driver: bridge