"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReferralsController = void 0;
const common_1 = require("@nestjs/common");
const swagger_1 = require("@nestjs/swagger");
const referrals_service_1 = require("../../application/services/referrals.service");
const referral_stats_service_1 = require("../../application/services/referral-stats.service");
const auth_guard_1 = require("../../../../common/guards/auth.guard");
let ReferralsController = class ReferralsController {
    constructor(referralsService, referralStatsService) {
        this.referralsService = referralsService;
        this.referralStatsService = referralStatsService;
    }
    async generateInviteLink(req, baseUrl) {
        const defaultBaseUrl = baseUrl || `${req.protocol}://${req.get('host')}`;
        const inviteLink = await this.referralsService.generateInviteLink(req.user.id.toString(), defaultBaseUrl);
        return {
            inviteLink,
            message: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏!',
            shareText: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É —Ç–µ–Ω–Ω–∏—Å–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É! üéæ',
        };
    }
    async validateReferralCode(code) {
        const isValid = await this.referralsService.validateReferralCode(code);
        return {
            isValid,
            message: isValid ? '–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω' : '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥',
        };
    }
    async getMyReferralStats(req) {
        return this.referralsService.getUserReferralStats(req.user.id.toString());
    }
    async getMyAchievements(req) {
        return this.referralStatsService.getUserAchievements(req.user.id.toString());
    }
    async getTopReferrers(limit) {
        const limitNum = limit ? parseInt(limit) : 10;
        return this.referralsService.getTopReferrers(limitNum);
    }
    async getGlobalStats() {
        return this.referralStatsService.getGlobalStats();
    }
    async registerByReferral(registerData, req) {
        if (!registerData.referralCode) {
            throw new common_1.BadRequestException('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥');
        }
        const result = await this.referralsService.registerByReferral(registerData.referralCode, {
            ...registerData,
            ipAddress: req.ip,
        });
        return {
            user: result.user,
            referrer: result.referrer,
            message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª ${result.referrer.firstName}`,
        };
    }
    async markUserAsActive(userId) {
        await this.referralsService.markUserAsActive(userId);
        return { message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π' };
    }
};
__decorate([
    (0, common_1.Post)('generate-invite'),
    (0, common_1.UseGuards)(auth_guard_1.AuthGuard),
    (0, swagger_1.ApiOperation)({ summary: '–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ' }),
    (0, swagger_1.ApiResponse)({ status: 201, description: '–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞' }),
    __param(0, (0, common_1.Req)()),
    __param(1, (0, common_1.Body)('baseUrl')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, String]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "generateInviteLink", null);
__decorate([
    (0, common_1.Get)('validate/:code'),
    (0, swagger_1.ApiOperation)({ summary: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞' }),
    (0, swagger_1.ApiParam)({ name: 'code', description: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞' }),
    __param(0, (0, common_1.Param)('code')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "validateReferralCode", null);
__decorate([
    (0, common_1.Get)('my-stats'),
    (0, common_1.UseGuards)(auth_guard_1.AuthGuard),
    (0, swagger_1.ApiOperation)({ summary: '–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤' }),
    __param(0, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "getMyReferralStats", null);
__decorate([
    (0, common_1.Get)('my-achievements'),
    (0, common_1.UseGuards)(auth_guard_1.AuthGuard),
    (0, swagger_1.ApiOperation)({ summary: '–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤' }),
    __param(0, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "getMyAchievements", null);
__decorate([
    (0, common_1.Get)('top-referrers'),
    (0, swagger_1.ApiOperation)({ summary: '–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤' }),
    (0, swagger_1.ApiQuery)({ name: 'limit', required: false, description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10)' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: '–°–ø–∏—Å–æ–∫ —Ç–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤' }),
    __param(0, (0, common_1.Query)('limit')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "getTopReferrers", null);
__decorate([
    (0, common_1.Get)('global-stats'),
    (0, swagger_1.ApiOperation)({ summary: '–ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "getGlobalStats", null);
__decorate([
    (0, common_1.Post)('register'),
    (0, swagger_1.ApiOperation)({ summary: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ' }),
    (0, swagger_1.ApiBody)({
        schema: {
            type: 'object',
            properties: {
                referralCode: { type: 'string', description: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥' },
                telegram_id: { type: 'string', description: 'Telegram ID' },
                username: { type: 'string', description: 'Username' },
                first_name: { type: 'string', description: '–ò–º—è' },
                last_name: { type: 'string', description: '–§–∞–º–∏–ª–∏—è' },
                photo_url: { type: 'string', description: 'URL —Ñ–æ—Ç–æ' },
                source: { type: 'string', description: '–ò—Å—Ç–æ—á–Ω–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞' },
            },
            required: ['referralCode', 'telegram_id', 'username', 'first_name'],
        },
    }),
    (0, swagger_1.ApiResponse)({ status: 201, description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ' }),
    __param(0, (0, common_1.Body)()),
    __param(1, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "registerByReferral", null);
__decorate([
    (0, common_1.Post)('mark-active/:userId'),
    (0, common_1.UseGuards)(auth_guard_1.AuthGuard),
    (0, swagger_1.ApiOperation)({ summary: '–û—Ç–º–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)' }),
    (0, swagger_1.ApiParam)({ name: 'userId', description: 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' }),
    (0, swagger_1.ApiResponse)({ status: 200, description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π' }),
    __param(0, (0, common_1.Param)('userId')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], ReferralsController.prototype, "markUserAsActive", null);
ReferralsController = __decorate([
    (0, swagger_1.ApiTags)('referrals'),
    (0, common_1.Controller)('referrals'),
    __metadata("design:paramtypes", [referrals_service_1.ReferralsService,
        referral_stats_service_1.ReferralStatsService])
], ReferralsController);
exports.ReferralsController = ReferralsController;
