import { OnModuleInit } from '@nestjs/common';
import { Telegraf, Context } from 'telegraf';
import { UsersService } from '../users/application/services/users.service';
import { BallsService } from '../users/application/services/balls.service';
import { RequestsService } from '../requests/application/services/requests.service';
import { TournamentsService } from '../tournaments/application/services/tournaments.service';
import { MatchesService } from '../matches/application/services/matches.service';
import { TrainingsService } from '../trainings/application/services/trainings.service';
import { StoriesService } from '../stories/application/services/stories.service';
import { CasesService } from '../cases/application/services/cases.service';
import { CaseOpeningService } from '../cases/application/services/case-opening.service';
export declare class BotService implements OnModuleInit {
    private readonly bot;
    private readonly usersService;
    private readonly ballsService;
    private readonly requestsService;
    private readonly tournamentsService;
    private readonly matchesService;
    private readonly trainingsService;
    private readonly storiesService;
    private readonly casesService;
    private readonly caseOpeningService;
    private readonly logger;
    private userStates;
    constructor(bot: Telegraf<Context>, usersService: UsersService, ballsService: BallsService, requestsService: RequestsService, tournamentsService: TournamentsService, matchesService: MatchesService, trainingsService: TrainingsService, storiesService: StoriesService, casesService: CasesService, caseOpeningService: CaseOpeningService);
    onModuleInit(): Promise<void>;
    private getMainKeyboard;
    private getUserState;
    private setUserState;
    private clearUserState;
    handleStart(ctx: Context): Promise<void>;
    handleProfile(ctx: Context): Promise<void>;
    handlePlay(ctx: Context): Promise<void>;
    handleFindGame(ctx: Context): Promise<void>;
    handleCreateRequest(ctx: Context): Promise<void>;
    handleTournaments(ctx: Context): Promise<void>;
    handleActiveTournaments(ctx: Context): Promise<void>;
    handleCases(ctx: Context): Promise<void>;
    handleStories(ctx: Context): Promise<void>;
    handleTrainings(ctx: Context): Promise<void>;
    handleRecordMatch(ctx: Context): Promise<void>;
    handleInviteButton(ctx: Context): Promise<void>;
    handleInvite(ctx: Context): Promise<void>;
    handleAICoach(ctx: Context): Promise<void>;
    handleText(ctx: Context): Promise<void>;
    private handleStatefulInput;
    private handleRequestDateTime;
    private handleRequestLocation;
    private handleRequestDescription;
    private createGameRequest;
    private handleFirstName;
    private handleLastName;
    private handleCity;
    private handleCourt;
    private handleTournamentName;
    private handleTournamentDescription;
    private handleMatchOpponent;
    private handleMatchScore;
    private handleStoryDescription;
    private completeProfileSetup;
    private getLevelText;
    private getFrequencyText;
    private getNtrpRating;
    handleOpenCase(ctx: Context): Promise<void>;
    handleRespondToRequest(ctx: Context): Promise<void>;
    handleDebug(ctx: Context): Promise<void>;
    handleMenu(ctx: Context): Promise<void>;
    handleReferralStats(ctx: Context): Promise<void>;
}
