import { OnModuleInit } from '@nestjs/common';
import { Context, Telegraf } from 'telegraf';
import { ProfileHandler } from './handlers/profile.handler';
import { MatchesHandler } from './handlers/matches.handler';
import { RequestsHandler } from './handlers/requests.handler';
import { TournamentsHandler } from './handlers/tournaments.handler';
import { TrainingsHandler } from './handlers/trainings.handler';
import { StoriesHandler } from './handlers/stories.handler';
import { CasesHandler } from './handlers/cases.handler';
import { AiCoachHandler } from './handlers/ai-coach.handler';
import { CommonHandler } from './handlers/common.handler';
import { MessagingHandler } from './handlers/messaging.handler';
import { StateService } from './services/state.service';
export declare class BotService implements OnModuleInit {
    private readonly bot;
    private readonly profileHandler;
    private readonly matchesHandler;
    private readonly requestsHandler;
    private readonly tournamentsHandler;
    private readonly trainingHandler;
    private readonly storiesHandler;
    private readonly casesHandler;
    private readonly aiCoachHandler;
    private readonly commonHandler;
    private readonly messagingHandler;
    private readonly stateService;
    private readonly logger;
    constructor(bot: Telegraf<Context>, profileHandler: ProfileHandler, matchesHandler: MatchesHandler, requestsHandler: RequestsHandler, tournamentsHandler: TournamentsHandler, trainingHandler: TrainingsHandler, storiesHandler: StoriesHandler, casesHandler: CasesHandler, aiCoachHandler: AiCoachHandler, commonHandler: CommonHandler, messagingHandler: MessagingHandler, stateService: StateService);
    onModuleInit(): Promise<void>;
    onMessage_DISABLED(ctx: Context): Promise<void>;
    onCallbackQuery_DISABLED(ctx: Context): Promise<void>;
    handleStart(ctx: Context): Promise<void>;
    handleHelp(ctx: Context): Promise<void>;
    handleProfile(ctx: Context): Promise<void>;
    handlePlay(ctx: Context): Promise<void>;
    handleTournaments(ctx: Context): Promise<void>;
    handleTrainings(ctx: Context): Promise<void>;
    handleStories(ctx: Context): Promise<void>;
    handleCases(ctx: Context): Promise<void>;
    handleRecordResult(ctx: Context): Promise<void>;
    handleInviteFriend(ctx: Context): Promise<void>;
    handleAiCoach(ctx: Context): Promise<void>;
    handleCourts(ctx: Context): Promise<void>;
    handleSettings(ctx: Context): Promise<void>;
    handleText(ctx: Context): Promise<void>;
    handlePhoto(ctx: Context): Promise<boolean>;
    handleVideo(ctx: Context): Promise<boolean>;
    handleDebug(ctx: Context): Promise<void>;
    processUpdate(update: any): Promise<void>;
    getBotInfo(): Promise<import("@telegraf/types").UserFromGetMe>;
    handleMainMenuAction(ctx: Context): Promise<void>;
    handleMyTournamentsAction(ctx: Context): Promise<void>;
    handleFindTournamentAction(ctx: Context): Promise<void>;
    handleCreateTournamentAction(ctx: Context): Promise<void>;
    handleDetailedStatsAction(ctx: Context): Promise<void>;
    handleUserAchievementsAction(ctx: Context): Promise<void>;
    handleSetupProfileAction(ctx: Context): Promise<void>;
    handleUserGoalsAction(ctx: Context): Promise<void>;
    handleMatchHistoryAction(ctx: Context): Promise<void>;
    handleFindGameAction(ctx: Context): Promise<void>;
    handleCreateRequestAction(ctx: Context): Promise<void>;
    handleBackToProfileAction(ctx: Context): Promise<void>;
    handleBackToTournamentsAction(ctx: Context): Promise<void>;
    handleLevelBeginner(ctx: Context): Promise<void>;
    handleLevelAmateur(ctx: Context): Promise<void>;
    handleLevelConfident(ctx: Context): Promise<void>;
    handleLevelTournament(ctx: Context): Promise<void>;
    handleLevelSemiPro(ctx: Context): Promise<void>;
    handleLevelAny(ctx: Context): Promise<void>;
    handleHandLeft(ctx: Context): Promise<void>;
    handleHandRight(ctx: Context): Promise<void>;
    handleCancelMessage(ctx: Context): Promise<void>;
    handleJoinTournament(ctx: Context): Promise<void>;
    handleLeaveTournament(ctx: Context): Promise<void>;
    handleViewProfile(ctx: Context): Promise<void>;
    handleReplyMessage(ctx: Context): Promise<void>;
    handleProfileAction(ctx: Context): Promise<void>;
    handleSportTennis(ctx: Context): Promise<void>;
    handleSportPadel(ctx: Context): Promise<void>;
    handleStartStepTwo(ctx: Context): Promise<void>;
    handleTournamentsYes(ctx: Context): Promise<void>;
    handleTournamentsNo(ctx: Context): Promise<void>;
    handleLevelBeginnerProfile(ctx: Context): Promise<void>;
    handleLevelAmateurProfile(ctx: Context): Promise<void>;
    handleLevelConfidentProfile(ctx: Context): Promise<void>;
    handleLevelAdvancedProfile(ctx: Context): Promise<void>;
    handleLevelTournamentProfile(ctx: Context): Promise<void>;
    handleLevelSemiProProfile(ctx: Context): Promise<void>;
    handleLevelBeginnerNtrp(ctx: Context): Promise<void>;
    handleLevelAmateurNtrp(ctx: Context): Promise<void>;
    handleLevelConfidentNtrp(ctx: Context): Promise<void>;
    handleLevelTournamentNtrp(ctx: Context): Promise<void>;
    handleFrequency1(ctx: Context): Promise<void>;
    handleFrequency2(ctx: Context): Promise<void>;
    handleFrequency3(ctx: Context): Promise<void>;
    handleTimeMorning(ctx: Context): Promise<void>;
    handleTimeDay(ctx: Context): Promise<void>;
    handleTimeEvening(ctx: Context): Promise<void>;
    handleTimeNight(ctx: Context): Promise<void>;
    handleContinueToFrequency(ctx: Context): Promise<void>;
    handleBackhandOne(ctx: Context): Promise<void>;
    handleBackhandTwo(ctx: Context): Promise<void>;
    handleSurfaceHard(ctx: Context): Promise<void>;
    handleSurfaceClay(ctx: Context): Promise<void>;
    handleSurfaceGrass(ctx: Context): Promise<void>;
    handleSurfaceCarpet(ctx: Context): Promise<void>;
    handleStyleUniversal(ctx: Context): Promise<void>;
    handleStyleDefensive(ctx: Context): Promise<void>;
    handleStyleAggressive(ctx: Context): Promise<void>;
    handleStyleNetPlayer(ctx: Context): Promise<void>;
    handleStyleBasic(ctx: Context): Promise<void>;
    handleShotServe(ctx: Context): Promise<void>;
    handleShotForehand(ctx: Context): Promise<void>;
    handleShotBackhand(ctx: Context): Promise<void>;
    handleShotVolley(ctx: Context): Promise<void>;
    handleShotSmash(ctx: Context): Promise<void>;
    handleOpponentAny(ctx: Context): Promise<void>;
    handleOpponentMen(ctx: Context): Promise<void>;
    handleOpponentWomen(ctx: Context): Promise<void>;
    handleOpponentSameLevel(ctx: Context): Promise<void>;
    handleOpponentStronger(ctx: Context): Promise<void>;
    handleOpponentWeaker(ctx: Context): Promise<void>;
    handleToggleNotifications(ctx: Context): Promise<void>;
    handleLangRu(ctx: Context): Promise<void>;
    handleLangEn(ctx: Context): Promise<void>;
    handleBackToMenu(ctx: Context): Promise<void>;
    handleEditProfile(ctx: Context): Promise<void>;
    handleAchievements(ctx: Context): Promise<void>;
    handleRating(ctx: Context): Promise<void>;
    handleShareProfile(ctx: Context): Promise<void>;
    handlePublicProfileView(ctx: Context): Promise<void>;
    handlePlayWithPlayer(ctx: Context): Promise<void>;
    handleMessagePlayer(ctx: Context): Promise<void>;
    handleReportPlayer(ctx: Context): Promise<void>;
    handleSendMatchInvite(ctx: Context): Promise<void>;
    handleReportSubmit(ctx: Context): Promise<void>;
}
